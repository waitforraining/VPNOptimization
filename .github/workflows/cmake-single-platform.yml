# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.

name: CMake on a single platform


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4      
    - name: install-boost
      uses: MarkusJx/install-boost@v2.4.5
      id: install-boost
      with:
          toolset: gcc          
          platform_version: 20.04
          boost_version: 1.81.0
          link: static    
    - name: opencv-cache
    # You may pin to the exact commit or the version.
    # uses: UrielCh/opencv-cache-action@5e96fa2651e0e4371a51052bb85a41c8dc430657
      uses: UrielCh/opencv-cache-action@V1
      with:
        # branch to checkout default is 4.x
        branch: 4.x # default is 4.x
        # List of feature to compile, the less features you select the smallest will be the image.
        BUILD_LIST: core,imgproc,imgcodecs,videoio,highgui
        # redude the size of the image by removing samples and tests. 
    - name: test
      run: tree /home/runner/work/test/build -L 2
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cmake -B ${{github.workspace}}/build1 \
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
        -DOpenCV_DIR=../build \
        -DBOOST_ROOT=${{steps.install-boost.outputs.BOOST_ROOT}} \
        -DBOOST_LIBRARYDIR=${{steps.install-boost.outputs.BOOST_ROOT}}/lib
    
    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build1 --config ${{env.BUILD_TYPE}}

